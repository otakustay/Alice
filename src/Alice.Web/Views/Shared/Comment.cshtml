@{
    Layout = null;
}
@model Comment
@{
    CommentView commentView = Model as CommentView;
    CommentAuditionView auditionView = Model as CommentAuditionView;
}
@functions {
    public string GetStatusAttribute(CommentAuditionView auditionView) {
        if (auditionView != null) {
            return " data-status=\"" + (auditionView.Audited ? "accepted" : "rejected") + "\"";
        }
        else {
            return String.Empty;
        }
    }
}
<li>
    <article id="comment-@Model.Id"@Html.Raw(GetStatusAttribute(auditionView))>
        <footer class="meta">
            @Html.Gravatar(Model.Author.Email, 32, "identicon", GravatarRating.G, new { @class = "author-avatar", alt = Model.Author.Name, width = 32, height = 32 })
            <span class="author-name">@Model.Author.Name</span>
            <time class="post-time" datetime="@Model.PostTime.ToString("yyyy-MM-dd")">@Model.PostTime.ToString("yyyy-MM-dd HH:mm")</time>
            @if (auditionView != null) {
                <span class="target-post">@auditionView.Post.Title</span>
            }
        </footer>
        <section class="content">
            @if (commentView != null && commentView.Target.HasValue) {
                <p>回复 <a href="#comment-@Model.Target" title="查看@("@" + commentView.TargetAuthorName)的发言">@("@" + commentView.TargetAuthorName)</a></p>
            }
            @Html.Raw(Model.Content)
        </section>
        <footer class="actions">
            @if (commentView != null) {
                <a href="@Url.Content(String.Format("~/{0}/comments/{1}/reply/#post-comment", Model.PostName, Model.Id))" title="回复 @Model.Author.Name" class="reply">回复</a>
            }
            @if (auditionView != null) {
                <span data-action="reject">屏蔽</span>
                <span data-action="accept">取消屏蔽</span>
            }
        </footer>
    </article>
</li>